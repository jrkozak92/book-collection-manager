<section id="auth-controls" class="show">
    <button type="button" id="login-button">Login</button>
    <button type="button" id="register-button">Register</button>
</section>
<dialog id="login-dialog">
    <form>
        <p>Please login: </p>
        <label for="username">Username: </label>
        <input type="text" id="username" name="username" required/>
        <label for="password">Password: </label>
        <input type="password" id="password" name="password" required/>
        <button type="submit" id="login-submit" value="default">Login</button>
        <button type="button" id="login-close" value="cancel" formmethod="dialog">Cancel</button>
        <p id="login-message" class="hide"></p>
    </form>
</dialog>
<dialog id="register-dialog">
    <form>
        <p>Create New Account: </p>
        <label for="new-username">Username: </label>
        <input type="text" id="new-username" name="new-username" required/>
        <label for="new-password">Password: </label>
        <input type="password" id="new-password" name="new-password" required minlength="8"/>
        <label for="match-password">Password Again (must match): </label>
        <input type="password" id="match-password" name="match-password" required minlength="8"/>
        <button type="submit" id="register-submit" class="submit" value="default">Register</button>
        <button type="button" id="register-close" value="cancel" formmethod="dialog">Cancel</button>
        <p id="register-message" class="hide"></p>
    </form>
</dialog>

<script>
    {{!-- nav elements --}}
    const authControls = document.querySelector("#auth-controls")

    {{!-- login elements --}}
    const loginButton = document.querySelector("#login-button")
    const loginDialog = document.querySelector("#login-dialog")
    const loginCloseButton = document.querySelector("#login-close")
    const loginSubmitButton = document.querySelector("#login-submit")
    const loginMessage = document.querySelector("#login-message")
    const username = document.querySelector("#username")
    const password = document.querySelector("#password")

    {{!-- login handling --}}
    loginButton.addEventListener("click", () => {
        loginSubmitButton.innerText = "Login"
        loginDialog.show()
    })

    loginSubmitButton.addEventListener("click", async (event) => {
        event.preventDefault()
        loginMessage.style = "color: black;"
        loginMessage.innerText = "Logging in..."
        await fetch("http://localhost:3000/api/auth/login", {
            method: 'POST',
            body: JSON.stringify({
                username: username.value, 
                password: password.value
            }),
            headers: {
                "Content-Type": "application/json"
            },
            mode: 'cors'
        }).then(async (response) => {
            console.log('response', response)
            let parsedResponse = await response.json()
            console.log("Response parsed: ", parsedResponse)
            if (response.status !== 404 && parsedResponse.message !== "Failure"){
                console.log("login accepted")
                loginMessage.classList.replace("show", "hide")
                loginDialog.close(parsedResponse.username)
                window.location.href = 'http://localhost:3000/'
            } else {
                console.log("login rejected")
                setTimeout(() => {
                    loginMessage.innerText = "Login unsuccessful, please try again. If you don't have an account yet, please create one by clicking the 'Register' button."
                    loginMessage.style = "color: red;"
                    loginMessage.classList.replace("hide", "show")
                }, 500)
            }
        }).catch((err) => {
            console.log("error object: ", err)
            console.log("Login failed unexpectedly")
        })
    })

    {{!-- loginDialog.addEventListener("close", (e) => {
        console.log("loginDialog output", loginDialog?.returnValue)
        loginDialog.returnValue === 'cancel'
            ? null
            : accountGreeting.innerText = `Hello, ${loginDialog.returnValue}!`
    }) --}}

    loginCloseButton.addEventListener("click", () => {
        loginMessage.innerText = ""
        loginDialog.close('cancel')
    })

    {{!-- registration elements --}}
    const registerButton = document.querySelector("#register-button")
    const registerDialog = document.querySelector("#register-dialog")
    const registerCloseButton = document.querySelector("#register-close")
    const registerSubmitButton = document.querySelector("#register-submit")
    const registerMessage = document.querySelector("#register-message")
    const newUsername = document.querySelector("#new-username")
    const newPassword = document.querySelector("#new-password")
    const matchPassword = document.querySelector("#match-password")

    {{!-- registration handling --}}
    registerButton.addEventListener("click", () => {
        loginSubmitButton.innerText = "Register"
        registerDialog.show()
    })

    matchPassword.addEventListener("keyup", () => {
        if (matchPassword.value == newPassword.value){
            matchPassword.removeAttribute("invalid")
            registerSubmitButton.removeAttribute("disabled")
        } else {
            matchPassword.setAttribute("invalid", "")
            registerSubmitButton.setAttribute("disabled", "")
        }
    })

    registerSubmitButton.addEventListener("click", async (event) => {
        event.preventDefault()
        registerMessage.style = "color: black;"
        registerMessage.innerText = "Registering new user..."
        await fetch("http://localhost:3000/api/auth/register", {
            method: 'POST',
            body: JSON.stringify({
                username: newUsername.value, 
                password: newPassword.value
            }),
            headers: {
                "Content-Type": "application/json"
            },
            mode: 'cors'
        }).then(async (response) => {
            const parsedResponse = await response.json()
            console.log('parsedResponse: ',parsedResponse)
            if (parsedResponse.message && response.status === 201){
                registerMessage.innerText = "Successfully registered and logged in."
                setTimeout(() => {
                    registerMessage.classList.replace("show", "hide")
                    registerDialog.close(parsedResponse.messsage)
                    window.location.href = 'http://localhost:3000/'
                }, 500)
                return
            } else {
                setTimeout(() => {
                    registerMessage.innerText = "Registration unsuccessful, please try again. If you already have an account, please login by clicking the 'Login' button."
                    registerMessage.style = "color: red;"
                    registerMessage.classList.replace("hide", "show")
                }, 500)
            }
        }).catch((err) => {
            // TODO: error handling for registering with non-unique username
            console.log(err)
            res.status(500)
        })
    })

    registerCloseButton.addEventListener("click", () => {
        registerMessage.innerText = ""
        registerDialog.close('cancel')
    })
</script>